@inject IFileReaderService FileReaderService

<input accept="@FileFormats" id="@_filePickerGuid" multiple="@AllowMultiple" @onchange="@ReadFile" @ref="@_element"
       style="display: none"
       type="file"/>

<input value="@Title" type="button" onclick="document.getElementById('@_filePickerGuid').click()" />

@code {
    /// <summary>
    /// Вызывается после выбора файлов и закрытия диалога.
    /// </summary>
    [Parameter]
    public EventCallback<IEnumerable<IFileReference>> OnFilesSelected { get; set; }

    /// <summary>
    /// Текст кнопки открытия диалога для выбора файла(ов).
    /// </summary>
    [Parameter]
    public string Title { get; set; }

    /// <summary>
    /// Если истинно, разрешает выбор нескольких файлов.
    /// </summary>
    [Parameter]
    public bool AllowMultiple { get; set; } = false;

    /// <summary>
    /// Разрешенные расширения файлов.
    /// </summary>
    [Parameter]
    public string FileFormats { get; set; } = "";

    private ElementReference _element;
    private readonly Guid _filePickerGuid = Guid.NewGuid();

    private async Task ReadFile()
    {
        var reader = FileReaderService.CreateReference(_element);
        var files = await reader.EnumerateFilesAsync();
        await OnFilesSelected.InvokeAsync(files);
        await reader.ClearValue();
    }
}
